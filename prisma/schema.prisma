generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                         String    @id
  email                      String?
  firstName                  String?   @map("first_name")
  lastName                   String?   @map("last_name")
  username                   String?
  imageUrl                   String?   @map("image_url")
  profileImageUrl            String?   @map("profile_image_url")
  hasImage                   Boolean   @default(false) @map("has_image")
  primaryEmailAddressId      String?   @map("primary_email_address_id")
  primaryPhoneNumberId       String?   @map("primary_phone_number_id")
  banned                     Boolean   @default(false)
  locked                     Boolean   @default(false)
  backupCodeEnabled          Boolean   @default(false) @map("backup_code_enabled")
  twoFactorEnabled           Boolean   @default(false) @map("two_factor_enabled")
  totpEnabled                Boolean   @default(false) @map("totp_enabled")
  passwordEnabled            Boolean   @default(false) @map("password_enabled")
  createOrganizationEnabled  Boolean   @default(true) @map("create_organization_enabled")
  deleteSelfEnabled          Boolean   @default(true) @map("delete_self_enabled")
  lastActiveAt               DateTime? @map("last_active_at") @db.Timestamptz(6)
  lastSignInAt               DateTime? @map("last_sign_in_at") @db.Timestamptz(6)
  createdAt                  DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt                  DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  isDeleted                  Boolean   @default(false) @map("is_deleted")
  emailAddresses             Json      @default("[]") @map("email_addresses") @db.JsonB
  phoneNumbers               Json      @default("[]") @map("phone_numbers") @db.JsonB
  externalAccounts           Json      @default("[]") @map("external_accounts") @db.JsonB
  publicMetadata             Json      @default("{}") @map("public_metadata") @db.JsonB
  privateMetadata            Json      @default("{}") @map("private_metadata") @db.JsonB
  unsafeMetadata             Json      @default("{}") @map("unsafe_metadata") @db.JsonB
  notionDatabases            Json      @default("[]") @map("notion_databases") @db.JsonB

  @@map("users")
}

model DailyTracking {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String   @map("user_id")
  date        DateTime @db.Date
  mood        Int?
  energyLevel Int?     @map("energy_level")
  notes       String?
  createdAt   DateTime @default(dbgenerated("timezone('utc'::text, now())")) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime @default(dbgenerated("timezone('utc'::text, now())")) @map("updated_at") @db.Timestamptz(6)

  @@unique([userId, date])
  @@index([date], map: "idx_daily_tracking_date")
  @@index([userId], map: "idx_daily_tracking_user_id")
  @@map("daily_tracking")
}

model StravaCredentials {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId       String   @unique @map("user_id")
  accessToken  String   @map("access_token")
  refreshToken String   @map("refresh_token")
  expiresAt    DateTime @map("expires_at") @db.Timestamptz(6)
  createdAt    DateTime @default(dbgenerated("timezone('utc'::text, now())")) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime @default(dbgenerated("timezone('utc'::text, now())")) @map("updated_at") @db.Timestamptz(6)

  @@index([userId], map: "idx_strava_credentials_user_id")
  @@map("strava_credentials")
}

model UserPreferences {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String   @unique @map("user_id")
  timezone  String?  @default("UTC")
  createdAt DateTime @default(dbgenerated("timezone('utc'::text, now())")) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(dbgenerated("timezone('utc'::text, now())")) @map("updated_at") @db.Timestamptz(6)

  @@index([userId], map: "idx_user_preferences_user_id")
  @@map("user_preferences")
}
